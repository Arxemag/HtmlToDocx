# Документация для скрипта

## Описание

Этот скрипт предназначен для загрузки и обработки документов с веб-сайта. Он использует библиотеку `requests` для HTTP-запросов, `BeautifulSoup` для парсинга HTML, `re` для работы с регулярными выражениями, `json` для сохранения данных, `os` для работы с файловой системой и `logging` для ведения логов. Прогресс выполнения отображается с помощью `tqdm`.

## Основные компоненты

### Импортируемые библиотеки

- `requests`: для выполнения HTTP-запросов.
- `BeautifulSoup`: для парсинга HTML-контента.
- `re`: для работы с регулярными выражениями.
- `json`: для сохранения данных в формате JSON.
- `time`: для управления задержками между запросами.
- `os`: для работы с файловой системой.
- `logging`: для ведения логов.
- `tqdm`: для отображения прогресс-бара.

### Конфигурация логирования

Логи записываются в файл `script.log` с уровнем `INFO`.

### Константы

- `URL_firstPart` и `URL_secondPart`: части URL для формирования полного адреса запроса.
- `pattern`: регулярное выражение для извлечения номера документа из URL.
- `cookies`: пример куки для сессии.
- `DELAY`: задержка между запросами.
- `MAX_RETRIES`: максимальное количество попыток при неудачном запросе.
- `DOCUMENTS_PER_SESSION`: количество документов, обрабатываемых за одну сессию.

### Функции

- `sanitize_filename(filename)`: очищает имя файла от недопустимых символов.
- `fetch_url(session, url)`: выполняет HTTP-запрос и возвращает ответ.
- `create_session()`: создает новую сессию с установленными куки.
- `save_document(data, directory, filename)`: сохраняет данные документа в файл JSON.
- `clean_text(text)`: очищает текст от лишних пробелов.
- `parse_content(content)`: извлекает вопросы, ответы и обоснования из текста.
- `process_document(session, nd, directory, is_nd_list=True)`: обрабатывает документ и сохраняет его, возвращает связанные номера документов.

### Основной процесс

1. Чтение уникальных значений `nd` из файла `nd_values.txt`.
2. Создание директорий `СПП` и `Норма` для сохранения документов.
3. Создание HTTP-сессии.
4. Обработка каждого `nd` из списка:
- Загрузка и парсинг документа.
- Сохранение документа в формате JSON.
- Извлечение и обработка связанных документов.

## Использование

Запустите скрипт, чтобы начать загрузку и обработку документов. Убедитесь, что файл `nd_values.txt` находится в той же директории, что и скрипт, и содержит список `nd` для обработки.